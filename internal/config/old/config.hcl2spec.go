// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package config

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatProvisioner is an auto-generated flat version of Provisioner.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatProvisioner struct {
	Version        *string `cty:"version" hcl:"version"`
	User           *string `cty:"user" hcl:"user"`
	DbusVersion    *string `cty:"dbus_version" hcl:"dbus_version"`
	DubsX11Version *string `cty:"dubs_x11_version" hcl:"dubs_x11_version"`
	SSHPubEntry    *string `cty:"ssh_pub_entry" hcl:"ssh_pub_entry"`
}

// FlatMapstructure returns a new FlatProvisioner.
// FlatProvisioner is an auto-generated flat version of Provisioner.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Provisioner) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatProvisioner)
}

// HCL2Spec returns the hcl spec of a Provisioner.
// This spec is used by HCL to read the fields of Provisioner.
// The decoded values from this spec will then be applied to a FlatProvisioner.
func (*FlatProvisioner) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"version":          &hcldec.AttrSpec{Name: "version", Type: cty.String, Required: false},
		"user":             &hcldec.AttrSpec{Name: "user", Type: cty.String, Required: false},
		"dbus_version":     &hcldec.AttrSpec{Name: "dbus_version", Type: cty.String, Required: false},
		"dubs_x11_version": &hcldec.AttrSpec{Name: "dubs_x11_version", Type: cty.String, Required: false},
		"ssh_pub_entry":    &hcldec.AttrSpec{Name: "ssh_pub_entry", Type: cty.String, Required: false},
	}
	return s
}
